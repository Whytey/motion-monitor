#!/usr/bin/env python
'''
Created on 24/07/2013

@author: djwhyte
'''
from gi.repository import GObject
import logging
import logging.handlers
import os
import motionmonitor.core


def __setup_logger():
    log_filename = "motion-monitor.log"

    logger = logging.getLogger('motionmonitor')
    logger.setLevel(logging.getLevelName("INFO"))

    # Determine the path to the log file.
    __in_development = os.path.exists(os.path.join(os.getcwd(), 'setup.py'))
    log_path = os.path.join(os.sep, 'var', 'log', 'motion-monitor')
    if __in_development:
        # We are working in a development environment
        log_path = os.path.join(os.sep, 'tmp', 'motion-monitor')

    if not os.path.exists(log_path):
        os.makedirs(log_path)

    logger_path = os.path.join(log_path, log_filename)

    # Add the log message handler to the logger (10MBs in size).
    file_handler = logging.handlers.RotatingFileHandler(
        logger_path, maxBytes=10485760, backupCount=7)
    logging.handlers.RotatingFileHandler.doRollover(file_handler)

    console_handler = logging.StreamHandler()

    formatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    file_handler.setFormatter(formatter)
    console_handler.setFormatter(formatter)

    logger.addHandler(file_handler)
    logger.addHandler(console_handler)

    return logger


if __name__ == '__main__':
    __logger = __setup_logger()
    __logger.debug("Logger configured")
    mm = motionmonitor.core.MotionMonitor()

    loop = GObject.MainLoop()
    loop.run()
